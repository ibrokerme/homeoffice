{
  "_args": [
    [
      "http-status@https://registry.npmjs.org/http-status/-/http-status-0.2.5.tgz",
      "C:\\homeoffice\\cinema-microservice\\movies-service"
    ]
  ],
  "_from": "http-status@latest",
  "_id": "http-status@0.2.5",
  "_inCache": true,
  "_location": "/http-status",
  "_phantomChildren": {},
  "_requested": {
    "name": "http-status",
    "raw": "http-status@https://registry.npmjs.org/http-status/-/http-status-0.2.5.tgz",
    "rawSpec": "https://registry.npmjs.org/http-status/-/http-status-0.2.5.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/http-status/-/http-status-0.2.5.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/http-status/-/http-status-0.2.5.tgz",
  "_shasum": "976f91077ea7bfc15277cbcf8c80c4d5c51b49b0",
  "_shrinkwrap": null,
  "_spec": "http-status@https://registry.npmjs.org/http-status/-/http-status-0.2.5.tgz",
  "_where": "C:\\homeoffice\\cinema-microservice\\movies-service",
  "author": {
    "email": "david@adaltas.com",
    "name": "David Worms"
  },
  "bugs": {
    "email": "open@adaltas.com",
    "url": "http://github.com/wdavidw/node-http-status/issues"
  },
  "contributors": [
    {
      "name": "David Worms",
      "email": "david@adaltas.com"
    },
    {
      "name": "Daniel Gasienica",
      "email": "daniel@gasienica.ch"
    }
  ],
  "dependencies": {},
  "description": "Interact with HTTP status code",
  "devDependencies": {
    "coffee-script": "latest",
    "mocha": "latest",
    "should": "latest"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "homepage": "http://www.adaltas.com/projects/node-http-status",
  "keywords": [
    "connect",
    "express",
    "http"
  ],
  "license": "BSD-3-Clause",
  "main": "lib/index.js",
  "name": "http-status",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://secure.travis-ci.org/wdavidw/node-http-status.png)](http://travis-ci.org/wdavidw/node-http-status)\n\n# HTTP Status code for Node\n\nUtility to interact with HTTP status code.\n\n## Usage\n\nOnce you require this module, you may call it with either an HTTP code or a message name. With an HTTP code, you will get the message name while with a message name you will get an HTTP code. Simple.\n\n## API\n\nThis module is very simple. A documentation would be more complicate than reading the [original code](./src/index.litcoffee).\n\n### API sample\n\n```javascript\n  var HTTPStatus = require('http-status');\n\n  // Print \"Internal Server Error\"\n  console.log(HTTPStatus[500]);\n\n  // Print 500\n  console.log(HTTPStatus.INTERNAL_SERVER_ERROR);\n```\n\n### Express sample\n\n```javascript\n  var express = require('express'),\n    redis = require('redis'),\n    HTTPStatus = require('http-status');\n\n  var app = express.createServer();\n\n  app.get('/', function (req, res) {\n    var client = redis.createClient();\n    client.ping(function (err, msg) {\n      if (err) {\n        return res.send(HTTPStatus.INTERNAL_SERVER_ERROR);\n      }\n      res.send(msg, HTTPStatus.OK);\n    });\n  });\n\n  app.listen(3000);\n```\n\nContributors\n------------\n\n*\t  David Worms : <https://github.com/wdavidw>\n*\t  Daniel Gasienica : <https://github.com/gasi>\n*   Rodrigo : <rfsbraz@gmail.com>\n*   Paul Vollmer : <paul.vollmer@fh-potsdam.de>\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/wdavidw/node-http-status.git"
  },
  "scripts": {
    "coffee": "coffee -b -o lib src",
    "test": "mocha"
  },
  "version": "0.2.5"
}
